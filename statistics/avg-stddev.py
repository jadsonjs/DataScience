#
# This program is distributed without any warranty and it
# can be freely redistributed for research, classes or private studies,
# since the copyright notices are not removed.
#
# This file was used to calc the average and std deviation of the results of 
# ensembles generated by the software weka.
# The weka saves the result in csv files with this pattern: 
# ensemble_classifier_numberOfClassifiers.csv, this code read all csv files and calc 
# the metrics.
#
# Jadson Santos - jadsonjs@gmail.com
# 
# to run this exemple install pyhton modules:
#
# pip3 install pandas
#

# Python Data Analysis Library
# https://pandas.pydata.org
import pandas as pd

# This module provides functions for calculating mathematical statistics of numeric (Real-valued) data.
# https://docs.python.org/3/library/statistics.html
import statistics 
  

#
# PUT THE RESULT DIRECTORY AND ENSEMBLE ALGORITHM GENEREATED BY WEKA ON HERE
#
# read the CSV file with your data base and put into a Pandas DataFrame 
# https://www.shanelynn.ie/using-pandas-dataframe-creating-editing-viewing-data-in-python/
#

directory = '/Users/jadson/tmp/results/'  # where are the files generated by weka
ensemble = 'bagging'                     # the type of ensemble algorithm used

for model in ['knn', 'ad', 'nb', 'mlp']:
  for num_classifiers in [10, 15, 20]:
    df = pd.read_csv( directory+ensemble+'_'+model+'_'+str(num_classifiers)+'.csv' )

    #Getting the precision data
    precision = df['IR_precision'].values

    # just if you want to show
    #print(precision)

    # Prints average and standard deviation 
    # xbar is set to default value of 1 
    print(" --> "+model+" ["+str(num_classifiers)+"]"+" Average: % s " % (statistics.mean(precision)) + " Std Dev: % s " % (statistics.stdev(precision))) 
